$ApiDefinitionPath = "C:\Path\to\API\Definition"
$OutputFilePath = "C:\Path\to\Output\File.raml"

function Resolve-RamlIncludes($filePath, [System.Collections.Generic.HashSet[string]]$visitedFiles) {
    $content = Get-Content -Path $filePath -Raw

$pattern = '(?i)(?<variable>[^:\r\n]+)\s*:\s*!include\s+(?<includePath>[^\r\n]+)'
$matches = [regex]::Matches($string, $pattern)

    $includeCount = $matches.Count

    Write-Host "Found $includeCount includes in $($filePath)"

    foreach ($match in $matches) {
        $variable = $match.Groups['variable'].Value.Trim()
        $includePath = $match.Groups['includePath'].Value
        $fullIncludePath = Join-Path -Path (Split-Path -Path $filePath) -ChildPath $includePath.Replace('/', '\')
        if (-not $visitedFiles.Contains($fullIncludePath)) {
            $visitedFiles.Add($fullIncludePath)
            $includeContent = Resolve-RamlIncludes -filePath $fullIncludePath -visitedFiles $visitedFiles
            Write-Host "Merging include: $variable -> $includePath"
            $content = $content -replace [regex]::Escape($match.Value), "`$variable: `r`n$includeContent"
        }
    }

    return $content
}

$visitedFiles = [System.Collections.Generic.HashSet[string]]::new()
$outputContent = Resolve-RamlIncludes -filePath (Join-Path -Path $ApiDefinitionPath -ChildPath "main.raml") -visitedFiles $visitedFiles
$outputContent | Out-File -FilePath $OutputFilePath -Encoding UTF8

Write-Host "API definition files aggregated successfully into $OutputFilePath."
